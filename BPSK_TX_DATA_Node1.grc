options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: BPSK_TX_DATA_Node1
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: BPSK
  id: variable_constellation
  parameters:
    comment: ''
    const_points: '[-1-1j, -1+1j, 1+1j, 1-1j]'
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    npwr: '1.0'
    precision: '8'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[0, 1, 3, 2]'
    type: bpsk
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 4.0]
    rotation: 0
    state: enabled
- name: access_code
  id: variable
  parameters:
    comment: ''
    value: '''10100001110001001111001011100111'''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 12.0]
    rotation: 0
    state: enabled
- name: excess_bw
  id: variable
  parameters:
    comment: ''
    value: '.35'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 12.0]
    rotation: 0
    state: enabled
- name: hdr_format
  id: variable
  parameters:
    comment: ''
    value: digital.header_format_default(access_code, threshold)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 12.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 5e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 12]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '8'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [880, 12.0]
    rotation: 0
    state: enabled
- name: threshold
  id: variable
  parameters:
    comment: ''
    value: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 12.0]
    rotation: 0
    state: enabled
- name: band_pass_filter_1
  id: band_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    decim: '1'
    gain: '1'
    high_cutoff_freq: 210e3
    interp: '1'
    low_cutoff_freq: 190e3
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_ccf
    width: '1000'
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 220.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '.5'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1216, 308.0]
    rotation: 180
    state: enabled
- name: blocks_rms_xx_0
  id: blocks_rms_xx
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.0001'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 308.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_tagged_stream_0
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 156.0]
    rotation: 0
    state: enabled
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengthtagname: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
    ninputs: '2'
    tag_preserve_head_pos: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 168.0]
    rotation: 0
    state: enabled
- name: digital_constellation_modulator_0
  id: digital_constellation_modulator
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: BPSK
    differential: 'True'
    excess_bw: excess_bw
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_symbol: sps
    truncate: 'False'
    verbose: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 156.0]
    rotation: 0
    state: enabled
- name: digital_protocol_formatter_bb_0
  id: digital_protocol_formatter_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    format: hdr_format
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, 156.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "from gnuradio import gr\nimport numpy as np\nimport os\n\nclass\
      \ repeat_packet_file_source(gr.sync_block):\n    \"\"\"\n    A block that reads\
      \ the contents of a file, wraps it with a hardcoded 50-byte ASCII header and\
      \ footer, \n    and transmits the packet as a stream of bytes, repeated X times.\n\
      \    \"\"\"\n\n    def __init__(self, file_path=\"/home/ubuntu/Documents/Senior\
      \ Project/Communication Protocol/SeniorProject/command.txt\", num_repeats=3):\n\
      \        gr.sync_block.__init__(\n            self,\n            name=\"Repeat\
      \ Packet File Source\",  # Block name\n            in_sig=None,            \
      \           # No input signal\n            out_sig=[np.uint8],             \
      \   # Output is a stream of bytes\n        )\n\n        # Parameters\n     \
      \   self.file_path = file_path\n        self.num_repeats = num_repeats\n\n \
      \       # Validate and read file\n        if not os.path.isfile(self.file_path):\n\
      \            raise ValueError(f\"File not found: {self.file_path}\")\n     \
      \   with open(self.file_path, \"rb\") as f:\n            self.file_data = f.read()\
      \  # Read entire file into memory\n\n        # Hardcoded ASCII header and footer\n\
      \        self.header = (\"A\" * 256).encode(\"ascii\")  # 50 bytes of ASCII\
      \ 'a'\n        self.footer = (\"A\" * 256).encode(\"ascii\")  # 50 bytes of\
      \ ASCII 'A'\n\n        # Create the packet (header + file_data + footer)\n \
      \       self.packet = self.header + self.file_data + self.footer\n\n       \
      \ # Repeat the packet X times\n        self.buffer = self.packet * self.num_repeats\n\
      \n    def work(self, input_items, output_items):\n        \"\"\"\n        Outputs\
      \ the packetized data as a byte stream, repeated X times.\n        \"\"\"\n\
      \        out = output_items[0]\n\n        # If buffer is empty, stop processing\n\
      \       # if not self.buffer:\n          #  return -1\n\n        # Determine\
      \ how much data to output\n        to_write = min(len(self.buffer), len(out))\n\
      \n        # Write data to the output buffer\n        out[:to_write] = np.frombuffer(self.buffer[:to_write],\
      \ dtype=np.uint8)\n\n        # Remove the transmitted portion from the buffer\n\
      \        self.buffer = self.buffer[to_write:]\n\n        return to_write\n"
    affinity: ''
    alias: ''
    comment: ''
    file_path: '"/home/ubuntu/Documents/Senior Project/Communication Protocol/SeniorProject/two_tone_slave_data.txt"'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_repeats: '1500'
  states:
    _io_cache: ('Repeat Packet File Source', 'repeat_packet_file_source', [('file_path',
      "'/home/ubuntu/Documents/Senior Project/Communication Protocol/SeniorProject/command.txt'"),
      ('num_repeats', '3')], [], [('0', 'byte', 1)], '\n    A block that reads the
      contents of a file, wraps it with a hardcoded 50-byte ASCII header and footer,
      \n    and transmits the packet as a stream of bytes, repeated X times.\n    ',
      ['file_path', 'num_repeats'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 156.0]
    rotation: 0
    state: enabled
- name: epy_block_0_0_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nimport numpy as np\nimport zmq\nfrom gnuradio\
      \ import gr\nimport pmt\n\nclass blk(gr.sync_block):  \n    \"\"\"Detect single\
      \ tone using RMS input; output via ZMQ, PMT, and GNU Radio stream\"\"\"\n\n\
      \    def __init__(self, threshold=0.1, zmq_port=7040):  \n        gr.sync_block.__init__(\n\
      \            self,\n            name='detect_single_tone',  \n            in_sig=[np.float32],\
      \  # Only one RMS input now\n            out_sig=[np.float32]  # Single output\
      \ (binary detection result)\n        )\n        self.threshold = threshold\n\
      \        self.last_sent = None\n\n        # ZMQ PUB setup\n        self.context\
      \ = zmq.Context()\n        self.socket = self.context.socket(zmq.PUB)\n    \
      \    self.socket.bind(f\"tcp://*:{zmq_port}\")\n\n        # PMT output port\n\
      \        self.message_port_register_out(pmt.intern(\"detected_flag\"))\n\n \
      \   def work(self, input_items, output_items):\n        \"\"\"Check if tone\
      \ is present and send detection status\"\"\"\n        rms = input_items[0]\n\
      \        out = output_items[0]\n\n        tone_value = 1 if np.mean(rms) > self.threshold\
      \ else 0\n\n        if tone_value != self.last_sent:\n            self.socket.send_string(str(tone_value))\n\
      \            self.last_sent = tone_value\n\n        self.message_port_pub(pmt.intern(\"\
      detected_flag\"), pmt.from_long(tone_value))\n        out[:] = float(tone_value)\n\
      \n        return len(output_items[0])\n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    threshold: '.01'
    zmq_port: '4010'
  states:
    _io_cache: ('detect_single_tone', 'blk', [('threshold', '0.1'), ('zmq_port', '7040')],
      [('0', 'float', 1)], [('0', 'float', 1), ('detected_flag', 'message', 1)], 'Detect
      single tone using RMS input; output via ZMQ, PMT, and GNU Radio stream', ['threshold'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 296.0]
    rotation: 0
    state: enabled
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [920, 460.0]
    rotation: 180
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 244.0]
    rotation: 180
    state: enabled
- name: qtgui_freq_sink_x_1
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 212.0]
    rotation: 0
    state: enabled
- name: qtgui_number_sink_2
  id: qtgui_number_sink
  parameters:
    affinity: ''
    alias: ''
    autoscale: 'False'
    avg: '0'
    color1: ("black", "black")
    color10: ("black", "black")
    color2: ("black", "black")
    color3: ("black", "black")
    color4: ("black", "black")
    color5: ("black", "black")
    color6: ("black", "black")
    color7: ("black", "black")
    color8: ("black", "black")
    color9: ("black", "black")
    comment: ''
    factor1: '1'
    factor10: '1'
    factor2: '1'
    factor3: '1'
    factor4: '1'
    factor5: '1'
    factor6: '1'
    factor7: '1'
    factor8: '1'
    factor9: '1'
    graph_type: qtgui.NUM_GRAPH_HORIZ
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    max: '1'
    min: '-1'
    name: '""'
    nconnections: '1'
    type: float
    unit1: ''
    unit10: ''
    unit2: ''
    unit3: ''
    unit4: ''
    unit5: ''
    unit6: ''
    unit7: ''
    unit8: ''
    unit9: ''
    update_time: '0.10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 396.0]
    rotation: 180
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [936, 388.0]
    rotation: 180
    state: enabled
- name: soapy_limesdr_sink_0
  id: soapy_limesdr_sink
  parameters:
    affinity: ''
    alias: ''
    bandwidth: 5e6
    center_freq: 433e6
    comment: ''
    dev_args: ''
    freq_correction: '0'
    gain: '50'
    samp_rate: samp_rate
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 320.0]
    rotation: 180
    state: enabled
- name: soapy_limesdr_source_0
  id: soapy_limesdr_source
  parameters:
    affinity: ''
    alias: ''
    bandwidth: 5e6
    center_freq: 445e6
    comment: ''
    dev_args: ''
    freq_correction: '0'
    gain: '30.0'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 268.0]
    rotation: 0
    state: enabled

connections:
- [band_pass_filter_1, '0', blocks_rms_xx_0, '0']
- [band_pass_filter_1, '0', qtgui_freq_sink_x_1, '0']
- [blocks_multiply_const_vxx_0, '0', qtgui_const_sink_x_0, '0']
- [blocks_multiply_const_vxx_0, '0', qtgui_freq_sink_x_0, '0']
- [blocks_multiply_const_vxx_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_multiply_const_vxx_0, '0', soapy_limesdr_sink_0, '0']
- [blocks_rms_xx_0, '0', epy_block_0_0_0, '0']
- [blocks_stream_to_tagged_stream_0, '0', blocks_tagged_stream_mux_0, '1']
- [blocks_stream_to_tagged_stream_0, '0', digital_protocol_formatter_bb_0, '0']
- [blocks_tagged_stream_mux_0, '0', digital_constellation_modulator_0, '0']
- [digital_constellation_modulator_0, '0', blocks_multiply_const_vxx_0, '0']
- [digital_protocol_formatter_bb_0, '0', blocks_tagged_stream_mux_0, '0']
- [epy_block_0, '0', blocks_stream_to_tagged_stream_0, '0']
- [epy_block_0_0_0, '0', qtgui_number_sink_2, '0']
- [soapy_limesdr_source_0, '0', band_pass_filter_1, '0']

metadata:
  file_format: 1
  grc_version: 3.10.10.0
